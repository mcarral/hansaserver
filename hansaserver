#!/bin/sh
#
# Startup script for HansaServer
#
# chkconfig: 345 99 01
# description: HansaServer process
# processname: hansaserver
#

programa=urlhansaprogram

echo_success(){
  printf "$(tput setaf 2)%155s$(tput sgr0)\n" "[OK]"
}

echo_failure(){
  printf "$(tput setaf 1)%155s$(tput sgr0)\n" "[FAILED]"
}

startup(){
  chmod +x $programa/hansa-server
  chmod +x $programa/hansa-reloaded
  #screen $programa/hansa-reloaded
  nohup $programa/hansa-reloaded porthansaprogram >$programa/nohup.out 2>&1 &
}

getpidhansa(){
  detailpid=`ps --no-heading -C hansa-server -f | grep $programa | xargs | tr ' ' '\n'`
  PID=`echo "$detailpid" | sed -n 2,2p`

  echo "$PID"
}

getpidreloaded(){
  detailpid=`ps --no-heading -C hansa-reloaded -f | grep $programa | xargs | tr ' ' '\n'`
  PID=`echo "$detailpid" | sed -n 2,2p`

  echo "$PID"
}


deletepid(){
 if [ -f "$programa"/hansa.pid ]; then
   rm -rf $programa/hansa.pid
 fi
}

start(){
 printf "[...] Starting hansaserver: \n"
 PIDHANSA=$(getpidhansa)
 PIDRELOADED=$(getpidreloaded)
 if [ ${#PIDRELOADED} != "0" ]; then
   echo_failure
   if ! [ ${#PIDHANSA} != "0" ]; then
       printf "Error el servicio ya se encuentra pero hansa no se encuentra activo, verifique el log \n"
   else
       printf "Error el servicio ya se encuentra corriendo \n"
   fi
 else
   startup
   sleep 10
   PIDRELOADED=$(getpidreloaded)
   PIDHANSA=$(getpidhansa)
   if [ ${#PIDHANSA} != "0" ] && [ ${#PIDRELOADED} != "0" ]; then
     printf "Servicio iniciado: $PIDHANSA (reloaded: $PIDRELOADED) \n"
     echo_success
   else
     printf "Error, servicio no iniciado, revisar el log nohup.out o hansa.log \n"
     echo_failure
   fi
 fi
}
 
stop(){
 printf "[...] Stopping hansaserver: \n"
 PIDHANSA=$(getpidhansa)
 PIDRELOADED=$(getpidreloaded)
 if [ ${#PIDRELOADED} != "0" ]; then
    kill -9 $PIDRELOADED
    kill -9 $PIDHANSA
    deletepid
    echo_success
 else
    echo_failure
    printf "Error hansaserver alredy stopped \n"
 fi
}
 
restart(){
 stop
 sleep 10
 start
}

status(){
 PIDHANSA=$(getpidhansa)
 PIDRELOADED=$(getpidreloaded)
 if [ ${#PIDRELOADED} != "0" ] || [ ${#PIDHANSA} != "0" ]; then
   echo_success
   printf "hansaserver is running (pid $PIDHANSA | pid $PIDRELOADED)";
 else
   echo_failure
   printf "hansaserver is NOT running"
 fi
}

log(){
 if [ -f $programa/hansa.log ]; then
   tail -f -n100 $programa/hansa.log
 else
   printf "El archivo log del hansa no existe. Verifique que el servicio este activo y que se tenga permisos de escritura sobre la carpeta $programa \n"
 fi
}

backup(){
 if [ ! -d $programa/Backup ]; then
   mkdir $programa/Backup
 fi
 PIDHANSA=$(getpidhansa)
 if [ ${#PIDHANSA} != "0" ]; then
   printf "El servicio hansaserver esta activo. Desea pararlo?[yes/no]"
   read confirm
   while [ $confirm != "yes" -a $confirm != "no"  ]; do
     printf "\n"
     printf "Entrada incorrecta [yes/no] \n"
     read confirm
     confirm=${confirm:0:1}
   done
   if [ "$confirm" = "n" ]; then
     exit
   else
     stop
   fi
 fi
 nohup $programa/hansa-server --port porthansaprogram --backup >$programa/nohup.out 2>&1 &
 echo -e "[...]Waiting generating bakup\n"
 sleep 2
 PIDHANSA=$(getpidhansa)
 if [ ${#PIDHANSA} != "0" ]; then
   while [ ${#PIDHANSA} != "0" ]; do
     if [ ${#waiting} -gt 2 ]; then
       waiting=""
     fi
     waiting="$waiting."
     #echo -e "\r [$waiting]Waiting generating bakup \n"
     printf "[%b]Waiting generating backup\r" "$waiting"
     sleep 0.5
     PIDHANSA=$(getpidhansa)
   done
   printf "\nDone, backup generated.\n"
   echo_success
 else
   printf "Error al generar backup revise el log, service hansaserver log \n"
 fi
}

# Dependiento del parametro que se le pase
#start - stop - restart ejecuta la funciÃ³orrespondiente.
#echo "param1 $1 -> param2 $2 -> param3 $3"
case "$1" in
start)
 start
 ;;
stop)
 stop
 ;;
restart)
 restart
 ;;
status)
 status
 ;;
log)
 log
 ;;
backup)
 backup
 ;;
*)
 printf "Usar: $0 {start|stop|restart|status|log|backup} \n"
 exit 1
esac
 
exit 0